import numpy as np
from scipy.integrate import solve_ivp
import matplotlib.pyplot as plt

q = 1.6e-19
m = 1.67e-27
Bz = 1.0  # Tesla

def lorentz(t, y):
    x, y_pos, vx, vy = y
    v = np.array([vx, vy, 0.0])
    E = np.array([0.0, 0.0, 0.0])
    B = np.array([0.0, 0.0, Bz])
    a = (q/m) * (E + np.cross(v, B))
    return [vx, vy, a[0], a[1]]

y0 = [0.0, 0.0, 1e6, 0.0]  # x,y,vx,vy
t_span = (0, 1e-7)
t_eval = np.linspace(t_span[0], t_span[1], 2000)

sol = solve_ivp(lorentz, t_span, y0, t_eval=t_eval, max_step=1e-10)

plt.figure(figsize=(5,5))
plt.plot(sol.y[0], sol.y[1], linewidth=0.8)
plt.xlabel('x (m)'); plt.ylabel('y (m)')
plt.title('Trajectory (x vs y)')
plt.axis('equal')
plt.grid(True)
plt.show()
